{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baris\\\\OneDrive\\\\Desktop\\\\git_projects\\\\new_sudorm_try\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileItem from \"./ProfileItem\";\nimport { getProfiles } from \"../../actions/profile\";\nimport SideBar from \"../layout/SideBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profiles = _ref => {\n  _s();\n\n  let {\n    getProfiles,\n    profile: {\n      profiles,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"large text-primary\",\n          children: \"Roommates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fab fa-connectdevelop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), \" Browse and connect with roommates\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profiles\",\n          children: profiles.length > 0 ? profiles.map(profile => /*#__PURE__*/_jsxDEV(ProfileItem, {\n            profile: profile\n          }, profile._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No profiles found...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profiles;\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["C:/Users/baris/OneDrive/Desktop/git_projects/new_sudorm_try/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","ProfileItem","getProfiles","SideBar","Profiles","profile","profiles","loading","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,QAAQ,GAAG,QAAqD;AAAA;;AAAA,MAApD;AAAEF,IAAAA,WAAF;AAAeG,IAAAA,OAAO,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAAxB,GAAoD;AACpEV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,gBACGK,OAAO,gBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADM,gBAGN,QAAC,QAAD;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBACGD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GACCF,QAAQ,CAACG,GAAT,CAAcJ,OAAD,iBACX,QAAC,WAAD;AAA+B,YAAA,OAAO,EAAEA;AAAxC,aAAkBA,OAAO,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA,kBADF,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAhCD;;GAAMN,Q;;KAAAA,Q;AAkCNA,QAAQ,CAACO,SAAT,GAAqB;AACnBT,EAAAA,WAAW,EAAEJ,SAAS,CAACc,IAAV,CAAeC,UADT;AAEnBR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADmB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACgB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,QAA1C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport { getProfiles } from \"../../actions/profile\";\r\nimport SideBar from \"../layout/SideBar\";\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <div>\r\n      <SideBar />\r\n      <section className=\"container\">\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <Fragment>\r\n            <h1 className=\"large text-primary\">Roommates</h1>\r\n            <p className=\"lead\">\r\n              <i className=\"fab fa-connectdevelop\" /> Browse and connect with\r\n              roommates\r\n            </p>\r\n            <div className=\"profiles\">\r\n              {profiles.length > 0 ? (\r\n                profiles.map((profile) => (\r\n                  <ProfileItem key={profile._id} profile={profile} />\r\n                ))\r\n              ) : (\r\n                <h4>No profiles found...</h4>\r\n              )}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n"]},"metadata":{},"sourceType":"module"}