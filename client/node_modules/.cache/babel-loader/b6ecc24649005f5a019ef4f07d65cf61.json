{"ast":null,"code":"var _jsxFileName = \"/Users/omeryektasuzen/Desktop/sudorm/SUdorm/client/src/components/profiles/Profiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileItem from \"./ProfileItem\";\nimport { getProfiles } from \"../../actions/profile\";\nimport SideBar from \"../layout/SideBar\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profiles = _ref => {\n  _s();\n\n  let {\n    getProfiles,\n    profile: {\n      profiles,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      maxWidth: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 9,\n        children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: \"DEVELOPERS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"Browse and connect with developers.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: profiles.length > 0 ? profiles.map(profile => {\n              /*#__PURE__*/\n              _jsxDEV(ProfileItem, {\n                profile: profile\n              }, profile._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"No profiles found...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this) // <Fragment>\n        //   <h1 className=\"large text-primary\">Developers</h1>\n        //   <p className=\"lead\">\n        //     <i className=\"fab fa-connectdevelop\" /> Browse and connect with\n        //     developers\n        //   </p>\n        //   <div className=\"profiles\">\n        //     {profiles.length > 0 ? (\n        //       profiles.map((profile) =>  {\n        //         <ProfileItem key={profile._id} profile={profile} />\n        //       })\n        //     ) : (\n        //       <h4>No profiles found...</h4>\n        //     )}\n        //   </div>\n        // </Fragment>\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profiles;\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["/Users/omeryektasuzen/Desktop/sudorm/SUdorm/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","ProfileItem","getProfiles","SideBar","Container","Row","Col","Profiles","profile","profiles","loading","maxWidth","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,SAAT,EAAmBC,GAAnB,EAAuBC,GAAvB,QAAkC,YAAlC;;;AAEA,MAAMC,QAAQ,GAAG,QAAqD;AAAA;;AAAA,MAApD;AAAEL,IAAAA,WAAF;AAAeM,IAAAA,OAAO,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAAxB,GAAoD;AACpEb,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAES,MAAAA,QAAQ,EAAE;AAAZ,KAAlB;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,kBACGD,OAAO,gBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADM,gBAGN,QAAC,SAAD;AAAA,kCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,GAAD;AAAA,sBACGD,QAAQ,CAACG,MAAT,GAAkB,CAAlB,GACCH,QAAQ,CAACI,GAAT,CAAcL,OAAD,IAAa;AACxB;AAAA,sBAAC,WAAD;AAA+B,gBAAA,OAAO,EAAEA;AAAxC,iBAAkBA,OAAO,CAACM,GAA1B;AAAA;AAAA;AAAA;AAAA;AACD,aAFD,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHM,CAgBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAjCJ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CAlDD;;GAAMP,Q;;KAAAA,Q;AAoDNA,QAAQ,CAACQ,SAAT,GAAqB;AACnBb,EAAAA,WAAW,EAAEJ,SAAS,CAACkB,IAAV,CAAeC,UADT;AAEnBT,EAAAA,OAAO,EAAEV,SAAS,CAACoB,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,OAAO,EAAEY,KAAK,CAACZ;AADmB,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACoB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA0CK,QAA1C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileItem from \"./ProfileItem\";\nimport { getProfiles } from \"../../actions/profile\";\nimport SideBar from \"../layout/SideBar\";\nimport { Container,Row,Col } from \"reactstrap\";\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Container style={{ maxWidth: \"100%\" }}>\n      <Row>\n        <Col xs={3}>\n          <SideBar />\n        </Col>\n        <Col xs={9}>\n          {loading ? (\n            <Spinner />\n          ) : (\n            <Container>\n              <Row>DEVELOPERS</Row>\n              <Row>Browse and connect with developers.</Row>\n              <Row>\n                {profiles.length > 0 ? (\n                  profiles.map((profile) => {\n                    <ProfileItem key={profile._id} profile={profile} />;\n                  })\n                ) : (\n                  <h4>No profiles found...</h4>\n                )}\n              </Row>\n            </Container>\n            // <Fragment>\n            //   <h1 className=\"large text-primary\">Developers</h1>\n            //   <p className=\"lead\">\n            //     <i className=\"fab fa-connectdevelop\" /> Browse and connect with\n            //     developers\n            //   </p>\n            //   <div className=\"profiles\">\n            //     {profiles.length > 0 ? (\n            //       profiles.map((profile) =>  {\n            //         <ProfileItem key={profile._id} profile={profile} />\n\n            //       })\n            //     ) : (\n            //       <h4>No profiles found...</h4>\n            //     )}\n            //   </div>\n            // </Fragment>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n"]},"metadata":{},"sourceType":"module"}