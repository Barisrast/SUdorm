{"ast":null,"code":"import api from \"../utils/api\";\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from \"./types\";\n/*\r\n  NOTE: we don't need a config object for axios as the\r\n default headers in axios are already Content-Type: application/json\r\n also axios stringifies and parses JSON for you, so no need for \r\n JSON.stringify or JSON.parse\r\n*/\n// Load User\n\nexport const loadUser = () => async dispatch => {\n  try {\n    const res = await api.get(\"/auth\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post(\"/users\", formData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/baris/OneDrive/Desktop/git_projects/new_sudorm_try/client/src/actions/auth.js"],"names":["api","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","loadUser","dispatch","res","get","type","USER_LOADED","payload","data","err","AUTH_ERROR","register","formData","post","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,SAAhD;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAQ,OAAR,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEC,WADC;AAEPC,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEK;AADC,KAAD,CAAR;AAGD;AACF,CAbM,C,CAeP;;AACA,OAAO,MAAMC,QAAQ,GAAIC,QAAD,IAAc,MAAOV,QAAP,IAAoB;AACxD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,GAAG,CAACgB,IAAJ,CAAS,QAAT,EAAmBD,QAAnB,CAAlB;AAEAV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,gBADC;AAEPQ,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAIAN,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GARD,CAQE,OAAOQ,GAAP,EAAY;AACZ,UAAMK,MAAM,GAAGL,GAAG,CAACM,QAAJ,CAAaP,IAAb,CAAkBM,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWf,QAAQ,CAACJ,QAAQ,CAACmB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AAEDhB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL;AADC,KAAD,CAAR;AAGD;AACF,CApBM","sourcesContent":["import api from \"../utils/api\";\r\nimport { setAlert } from \"./alert\";\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from \"./types\";\r\n\r\n/*\r\n  NOTE: we don't need a config object for axios as the\r\n default headers in axios are already Content-Type: application/json\r\n also axios stringifies and parses JSON for you, so no need for \r\n JSON.stringify or JSON.parse\r\n*/\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(\"/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post(\"/users\", formData);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}